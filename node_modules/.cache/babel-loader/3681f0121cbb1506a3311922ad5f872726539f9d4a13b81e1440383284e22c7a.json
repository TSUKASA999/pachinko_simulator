{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\pachinko_app\\\\src\\\\components\\\\Display.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Display = props => {\n  _s();\n  const normalHit = 1; //通常時大当たり\n  const kakuhenHit = 1;\n\n  //.envから呼び出し\n  const probability_of_lef = process.env.REACT_APP_PROBABILITY_OF_LEFT;\n  const creditsRef = useRef(props.credits);\n  creditsRef.current = props.credits;\n  const rotateRef = useRef(props.rotate);\n  rotateRef.current = props.rotate;\n  const totalRotateRef = useRef(props.totalRotate);\n  totalRotateRef.current = props.totalRotate;\n  const isKakuhen = () => {\n    const data = {\n      '通常': 50,\n      '確変': 50\n    };\n    const rand = Math.floor(Math.random() * 100);\n    let rate = 0;\n    for (const prop in data) {\n      rate += data[prop];\n      if (rand <= rate) {\n        window.alert('通常');\n        break;\n      } else {\n        window.alert('確変');\n        props.setIsChanceTime(true);\n        break;\n      }\n    }\n  };\n  const kakuhenLottery = () => {\n    props.setRotate(rotateRef.current + 1);\n    props.setTotalRotate(totalRotateRef.current + 1);\n    const number = Math.floor(Math.random() * 75);\n    if (kakuhenHit === number) {\n      window.alert('BONUS');\n      clearInterval();\n      setFlg(false);\n      bonusLottery();\n    } else {\n      console.log('NEXT');\n    }\n  };\n  const bonusLottery = () => {\n    const data = {\n      'SUPER BIG BONUS': 20,\n      //2%\n      'BIG BONUS': 60 //73%\n      //BONUS20%\n    };\n\n    const rand = Math.floor(Math.random() * 100);\n    let result = '';\n    let rate = 0;\n    for (const prop in data) {\n      rate += data[prop];\n      if (rand <= rate) {\n        result = prop;\n        break;\n      } else {\n        result = 'BONUS';\n      }\n    }\n    props.setBonusTime(props.bonusTimes + 1);\n    console.log(result);\n    switch (result) {\n      case 'SUPER BIG BONUS':\n        window.alert('1500');\n        props.setMochidama(props.mochidama + 1500);\n        break;\n      case 'BIG BONUS':\n        window.alert('1000');\n        props.setMochidama(props.mochidama + 1000);\n        break;\n      case 'BONUS':\n        props.setMochidama(props.mochidama + 1000);\n        props.setIsChanceTime(false);\n        window.alert('左打ちに戻してくれ');\n        break;\n      default:\n        window.alert('係員を呼んでください');\n    }\n    props.setRotate(0);\n  };\n\n  // n回転/1kの処理\n  const normalHandle = () => {\n    if (creditsRef.current <= 0) {\n      window.alert('玉がありません');\n      clearInterval();\n      setFlg(false);\n      return;\n    } else {\n      props.setCredit(creditsRef.current - 1);\n      const number = Math.floor(Math.random() * 10);\n      if (number === normalHit) {\n        normalLottery();\n      }\n    }\n  };\n\n  // 通常時の抽選\n  const normalLottery = () => {\n    const number = Math.floor(Math.random() * 319);\n    if (number === normalHit) {\n      clearInterval();\n      setFlg(false);\n      window.alert('大当たり！');\n      props.setMochidama(props.mochidama + 600);\n      props.setBonusTime(props.bonusTimes + 1);\n      isKakuhen();\n      props.setRotate(0);\n    } else {\n      console.log('next');\n      props.setRotate(rotateRef.current + 1);\n    }\n    props.setTotalRotate(totalRotateRef.current + 1);\n  };\n\n  // const [count, setCount] = useState(0)\n  // const intervalRef = useRef(null)\n\n  // const start = useCallback(() => {\n  //     if (intervalRef.current !== null) {\n  //         return;\n  //     }\n  //     intervalRef.current = setInterval(() => {\n  //         normalHandle()\n  //     }, 500)\n  // }, [])\n\n  // const stop = useCallback(() => {\n  //     if (intervalRef.current === null) {\n  //         return\n  //     }\n  //     clearInterval(intervalRef.current)\n  //     intervalRef.current = null\n  // }, [])\n\n  //20230411\n  const [flg, setFlg] = useState(false);\n  let interval = null;\n  useEffect(() => {\n    if (flg) {\n      console.log('開始');\n      interval = setInterval(() => {\n        if (!props.isChanceTime) {\n          normalHandle();\n        } else {\n          kakuhenLottery();\n        }\n      }, 50);\n      return () => {\n        console.log('停止');\n        clearInterval(interval);\n      };\n    }\n  }, [flg]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setFlg(!flg),\n      className: \"handle\",\n      children: \"handle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"display\",\n      children: props.isChanceTime ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"test\",\n          children: \"\\u78BA\\u5909\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"test\",\n          children: \"\\u901A\\u5E38\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Display, \"pBvU5iMevq5BL8Ak4U8lxyGIl6A=\");\n_c = Display;\nexport default Display;\nvar _c;\n$RefreshReg$(_c, \"Display\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Display","props","_s","normalHit","kakuhenHit","probability_of_lef","process","env","REACT_APP_PROBABILITY_OF_LEFT","creditsRef","credits","current","rotateRef","rotate","totalRotateRef","totalRotate","isKakuhen","data","rand","Math","floor","random","rate","prop","window","alert","setIsChanceTime","kakuhenLottery","setRotate","setTotalRotate","number","clearInterval","setFlg","bonusLottery","console","log","result","setBonusTime","bonusTimes","setMochidama","mochidama","normalHandle","setCredit","normalLottery","flg","interval","setInterval","isChanceTime","children","onClick","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/pachinko_app/src/components/Display.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\r\n\r\nconst Display = (props) => {\r\n    const normalHit = 1;//通常時大当たり\r\n    const kakuhenHit = 1;\r\n\r\n    //.envから呼び出し\r\n    const probability_of_lef = process.env.REACT_APP_PROBABILITY_OF_LEFT\r\n    const creditsRef = useRef(props.credits)\r\n    creditsRef.current = props.credits\r\n    const rotateRef = useRef(props.rotate)\r\n    rotateRef.current = props.rotate\r\n    const totalRotateRef = useRef(props.totalRotate)\r\n    totalRotateRef.current = props.totalRotate\r\n\r\n    const isKakuhen = () => {\r\n        const data = { '通常': 50, '確変': 50 }\r\n        const rand = Math.floor(Math.random() * 100)\r\n        let rate = 0\r\n        for (const prop in data) {\r\n            rate += data[prop]\r\n            if (rand <= rate) {\r\n                window.alert('通常')\r\n                break\r\n            } else {\r\n                window.alert('確変')\r\n                props.setIsChanceTime(true)\r\n                break\r\n            }\r\n        }\r\n    }\r\n\r\n    const kakuhenLottery = () => {\r\n        props.setRotate(rotateRef.current + 1)\r\n        props.setTotalRotate(totalRotateRef.current + 1)\r\n        const number = Math.floor(Math.random() * 75)\r\n        if (kakuhenHit === number) {\r\n            window.alert('BONUS')\r\n            clearInterval()\r\n            setFlg(false)\r\n            bonusLottery()\r\n        } else {\r\n            console.log('NEXT')\r\n        }\r\n    }\r\n\r\n    const bonusLottery = () => {\r\n        const data = {\r\n            'SUPER BIG BONUS': 20,//2%\r\n            'BIG BONUS': 60,//73%\r\n            //BONUS20%\r\n        }\r\n        const rand = Math.floor(Math.random() * 100)\r\n        let result = '';\r\n        let rate = 0\r\n        for (const prop in data) {\r\n            rate += data[prop]\r\n            if (rand <= rate) {\r\n                result = prop;\r\n                break\r\n            } else {\r\n                result = 'BONUS'\r\n            }\r\n        }\r\n\r\n        props.setBonusTime(props.bonusTimes + 1);\r\n\r\n        console.log(result)\r\n        switch (result) {\r\n            case 'SUPER BIG BONUS':\r\n                window.alert('1500')\r\n                props.setMochidama(props.mochidama + 1500)\r\n                break;\r\n            case 'BIG BONUS':\r\n                window.alert('1000')\r\n                props.setMochidama(props.mochidama + 1000)\r\n                break;\r\n            case 'BONUS':\r\n                props.setMochidama(props.mochidama + 1000)\r\n                props.setIsChanceTime(false)\r\n                window.alert('左打ちに戻してくれ')\r\n                break;\r\n            default:\r\n                window.alert('係員を呼んでください')\r\n        }\r\n        props.setRotate(0)\r\n    }\r\n\r\n    // n回転/1kの処理\r\n    const normalHandle = () => {\r\n        if (creditsRef.current <= 0) {\r\n            window.alert('玉がありません')\r\n            clearInterval()\r\n            setFlg(false)\r\n            return\r\n        } else {\r\n            props.setCredit(creditsRef.current - 1)\r\n            const number = Math.floor(Math.random() * 10)\r\n            if (number === normalHit) {\r\n                normalLottery()\r\n            }\r\n        }\r\n    }\r\n\r\n    // 通常時の抽選\r\n    const normalLottery = () => {\r\n        const number = Math.floor(Math.random() * 319)\r\n        if (number === normalHit) {\r\n            clearInterval()\r\n            setFlg(false)\r\n            window.alert('大当たり！')\r\n            props.setMochidama(props.mochidama + 600)\r\n            props.setBonusTime(props.bonusTimes + 1)\r\n            isKakuhen();\r\n            props.setRotate(0)\r\n        } else {\r\n            console.log('next')\r\n            props.setRotate(rotateRef.current + 1)\r\n        }\r\n        props.setTotalRotate(totalRotateRef.current + 1)\r\n    }\r\n\r\n    // const [count, setCount] = useState(0)\r\n    // const intervalRef = useRef(null)\r\n\r\n    // const start = useCallback(() => {\r\n    //     if (intervalRef.current !== null) {\r\n    //         return;\r\n    //     }\r\n    //     intervalRef.current = setInterval(() => {\r\n    //         normalHandle()\r\n    //     }, 500)\r\n    // }, [])\r\n\r\n    // const stop = useCallback(() => {\r\n    //     if (intervalRef.current === null) {\r\n    //         return\r\n    //     }\r\n    //     clearInterval(intervalRef.current)\r\n    //     intervalRef.current = null\r\n    // }, [])\r\n\r\n    //20230411\r\n    const [flg, setFlg] = useState(false)\r\n    let interval = null\r\n\r\n    useEffect(() => {\r\n        if (flg) {\r\n            console.log('開始')\r\n            interval = setInterval(() => {\r\n                if (!props.isChanceTime) {\r\n                    normalHandle()\r\n                } else {\r\n                    kakuhenLottery()\r\n                }\r\n            }, 50)\r\n            return () => {\r\n                console.log('停止')\r\n                clearInterval(interval)\r\n            }\r\n        }\r\n    }, [flg])\r\n\r\n\r\n    return (\r\n        <>\r\n            <button onClick={() => setFlg(!flg)} className='handle'>handle</button>\r\n            <div className='display'>\r\n\r\n                {props.isChanceTime\r\n                    ?\r\n                    <div>\r\n                        <p className='test'>確変</p>\r\n                        {/* <button onClick={kakuhenLottery}>抽選する</button> */}\r\n                    </div>\r\n                    :\r\n                    <div>\r\n                        <p className='test'>通常</p>\r\n                        {/* <button onClick={normalHandle}>抽選する</button> */}\r\n                    </div>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Display"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}